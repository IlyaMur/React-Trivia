{"version":3,"sources":["config.js","context.js","components/SetupForm.js","components/Loading.js","components/Modal.js","App.js","index.js"],"names":["categoryTable","sports","history","politics","computers","films","AppContext","React","createContext","AppProvider","children","useState","waiting","setWaiting","loading","setLoading","questions","setQuestions","index","setIndex","correct","setCorrect","error","setError","amount","category","difficulty","quiz","setQuiz","isModalOpen","setIsModalOpen","fetchQuestions","url","a","axios","catch","err","console","log","response","data","results","length","nextQuestion","oldIndex","openModal","Provider","value","checkAnswer","oldState","closeModal","handleChange","e","name","target","handleSubmit","preventDefault","useGlobalContext","useContext","SetupForm","className","htmlFor","type","id","onChange","min","max","Object","keys","map","i","key","onClick","Loading","Modal","toFixed","App","question","incorrect_answers","correct_answer","answers","tempIndex","Math","floor","random","push","dangerouslySetInnerHTML","__html","answer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ec1c2a5.chunk.js","sourcesContent":["export const categoryTable = {\n  sports: 21,\n  history: 23,\n  politics: 24,\n  computers: 18,\n  films: 11,\n};\n","import axios from \"axios\";\nimport React, { useState, useContext } from \"react\";\nimport { categoryTable } from \"./config\";\n\nconst API_ENDPOINT = \"https://opentdb.com/api.php?\";\n\nconst AppContext = React.createContext();\n\nconst AppProvider = ({ children }) => {\n  const [waiting, setWaiting] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const [questions, setQuestions] = useState([]);\n  const [index, setIndex] = useState(0);\n  const [correct, setCorrect] = useState(0);\n  const [error, setError] = useState(false);\n  const [quiz, setQuiz] = useState({\n    amount: 10,\n    category: \"sports\",\n    difficulty: \"easy\",\n  });\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const fetchQuestions = async (url) => {\n    setLoading(true);\n    setWaiting(false);\n\n    const response = await axios(url).catch((err) => console.log(err));\n    if (response) {\n      const data = response.data.results;\n      if (data.length > 0) {\n        setQuestions(data);\n        setLoading(false);\n        setWaiting(false);\n        setError(false);\n      } else {\n        setWaiting(true);\n        setError(true);\n      }\n    } else {\n      setWaiting(true);\n    }\n  };\n\n  const nextQuestion = () => {\n    setIndex((oldIndex) => {\n      const index = oldIndex + 1;\n      if (index > questions.length - 1) {\n        openModal();\n        return 0;\n      }\n      return index;\n    });\n  };\n\n  const checkAnswer = (value) => {\n    if (value) {\n      setCorrect((oldState) => oldState + 1);\n    }\n    nextQuestion();\n  };\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setWaiting(true);\n    setCorrect(0);\n    setIsModalOpen(false);\n  };\n\n  const handleChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setQuiz({ ...quiz, [name]: value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const { amount, category, difficulty } = quiz;\n\n    const url = `${API_ENDPOINT}amount=${amount}&difficilty=${difficulty}&category=${categoryTable[category]}&type=multiple`;\n\n    fetchQuestions(url);\n  };\n  return (\n    <AppContext.Provider\n      value={{\n        waiting,\n        questions,\n        loading,\n        index,\n        correct,\n        error,\n        isModalOpen,\n        nextQuestion,\n        checkAnswer,\n        closeModal,\n        handleChange,\n        handleSubmit,\n        quiz,\n        categoryTable,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport const useGlobalContext = () => {\n  return useContext(AppContext);\n};\n\nexport { AppContext, AppProvider };\n","import React from \"react\";\nimport { useGlobalContext } from \"../context\";\n\nconst SetupForm = () => {\n  const { quiz, handleChange, handleSubmit, error, categoryTable } =\n    useGlobalContext();\n  return (\n    <main>\n      <section className=\"quiz quiz-small\">\n        <form className=\"setup-form\">\n          <h2>Setup Quiz</h2>\n          <div className=\"form-control\">\n            <label htmlFor=\"amount\">number of questions</label>\n            <input\n              className=\"form-input\"\n              type=\"number\"\n              name=\"amount\"\n              id=\"amount\"\n              value={quiz.amount}\n              onChange={handleChange}\n              min={1}\n              max={50}\n            />\n          </div>\n          <div className=\"form-control\">\n            <label htmlFor=\"category\">category</label>\n            <select\n              name=\"category\"\n              id=\"category\"\n              className=\"form-input\"\n              value={quiz.category}\n              onChange={handleChange}\n            >\n              {Object.keys(categoryTable).map((category, i) => (\n                <option key={i} value={category}>\n                  {category}\n                </option>\n              ))}\n              )\n            </select>\n          </div>\n          <div className=\"form-control\">\n            <label htmlFor=\"difficulty\">select difficulty</label>\n            <select\n              name=\"difficulty\"\n              id=\"difficulty\"\n              className=\"form-input\"\n              value={quiz.difficulty}\n              onChange={handleChange}\n            >\n              <option value=\"easy\">easy</option>\n              <option value=\"medium\">medium</option>\n              <option value=\"hard\">hard</option>\n            </select>\n          </div>\n          {error && (\n            <p className=\"error\">\n              can't generate questions, please try different options\n            </p>\n          )}\n          <button type=\"submit\" onClick={handleSubmit} className=\"submit-btn\">\n            Start\n          </button>\n        </form>\n      </section>\n    </main>\n  );\n};\n\nexport default SetupForm;\n","import React from 'react'\n\nconst Loading = () => {\n  return (\n    <main>\n      <div className='loading'></div>\n    </main>\n  )\n}\n\nexport default Loading\n","import React from \"react\";\nimport { useGlobalContext } from \"../context\";\n\nconst Modal = () => {\n  const { isModalOpen, closeModal, correct, questions } = useGlobalContext();\n  return (\n    <div className={isModalOpen ? \"modal-container isOpen\" : \"modal-container\"}>\n      <div className=\"modal-content\">\n        <h2>Congrats!</h2>\n        <p>\n          You answered {((correct / questions.length) * 100).toFixed(0)}%\n          questions correctly\n        </p>\n        <button className=\"close-btn\" onClick={closeModal}>\n          Play again\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React from \"react\";\nimport { useGlobalContext } from \"./context\";\n\nimport SetupForm from \"./components/SetupForm\";\nimport Loading from \"./components/Loading\";\nimport Modal from \"./components/Modal\";\n\nfunction App() {\n  const {\n    waiting,\n    loading,\n    questions,\n    index,\n    correct,\n    nextQuestion,\n    checkAnswer,\n  } = useGlobalContext();\n\n  if (waiting) {\n    return <SetupForm />;\n  }\n  if (loading) {\n    return <Loading />;\n  }\n\n  const { question, incorrect_answers, correct_answer } = questions[index];\n  const answers = [...incorrect_answers];\n  const tempIndex = Math.floor(Math.random() * 4);\n  if (tempIndex === 3) {\n    answers.push(correct_answer);\n  } else {\n    answers.push(answers[tempIndex]);\n    answers[tempIndex] = correct_answer;\n  }\n\n  return (\n    <main>\n      <Modal />\n      <section className=\"quiz\">\n        <p className=\"correct-answers\">\n          correct answers: {correct}/{index}\n        </p>\n        <article className=\"container\">\n          <h2 dangerouslySetInnerHTML={{ __html: question }}></h2>\n          <div className=\"btn-container\">\n            {answers.map((answer, index) => {\n              return (\n                <button\n                  key={index}\n                  className=\"answer-btn\"\n                  onClick={() => checkAnswer(answer === correct_answer)}\n                  dangerouslySetInnerHTML={{ __html: answer }}\n                ></button>\n              );\n            })}\n          </div>\n        </article>\n        <button className=\"next-question\" onClick={nextQuestion}>\n          next question\n        </button>\n      </section>\n    </main>\n  );\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { AppProvider } from './context'\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}